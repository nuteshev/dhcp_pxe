# -*- mode: ruby -*-
# vi: set ft=ruby :
#
# start from Cobbler configuration
# vagrant up cobblersrv

class FixGuestAdditions < VagrantVbguest::Installers::Linux
    def install(opts=nil, &block)
        communicate.sudo("yum update kernel -y; yum install -y gcc binutils make perl bzip2 kernel-devel kernel-headers", opts, &block)
        super
    end
end


Vagrant.configure("2") do |config|

config.vm.define "cobblersrv" do |server|
  config.vagrant.plugins = "vagrant-reload"
  config.vm.box = 'centos/7'
  config.vm.box_url = 'https://cloud.centos.org/centos/7/vagrant/x86_64/images/CentOS-7-x86_64-Vagrant-2004_01.VirtualBox.box'

  server.vm.host_name = 'cobbler'
  server.vm.network :private_network, 
                    ip: "192.168.2.10", 
                     virtualbox__intnet: 'pxenet'

  server.vm.network "forwarded_port", guest: 443, host: 8081
  # server.vm.network "forwarded_port", guest: 80, host: 8081
  server.vbguest.installer = FixGuestAdditions
  server.vm.provider "virtualbox" do |vb|
    vb.memory = "1024"
    vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
  end
  
  server.vm.provision "shell",
    path: "disable_selinux.sh"
 
  server.vm.provision :reload

  server.vm.provision "shell",
    name: "Setup Cobbler server",
    path: "setup_cobbler.sh"
  end


# don't start this pxeclient before Cobbler server is ready
# Cent OS 8.2
# config used from this
# https://github.com/eoli3n/vagrant-pxe/blob/master/client/Vagrantfile
  config.vm.define "pxeclient" do |pxeclient|
    pxeclient.vm.box = 'centos/8.2'
    pxeclient.vm.host_name = 'pxeclient'
    pxeclient.vm.network :private_network, ip: "192.168.2.100", mac: "001122AABBCC"
    pxeclient.vm.provider :virtualbox do |vb|
    vb.memory = "1920"
    #vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      vb.customize [
          'modifyvm', :id,
          '--nic1', 'intnet',
          '--intnet1', 'pxenet',
          '--boot1', 'net',
          '--boot2', 'disk',
          '--boot3', 'none',
          '--boot4', 'none'
        ]
    end
  end
end
